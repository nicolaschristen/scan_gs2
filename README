Run GS2 scans
=============

contact: nicolas.christen@gmx.net


What the scripts do
-------------------

-- create GS2 input files for scans

-- create corresponding PBS/slurm scripts for the GS2 runs
    -- submit those scripts

-- create corresponding PBS/slurm scripts for postprocessing
    -- submit those scripts

Scans can have up to two dimensions (e.g. compute lin. growth rate vs tprim and g_exb).

Within each dimension of a scan, an arbitrary number of parameters can be varied
simultaneously (e.g. change tprim both for the electrons and for the ions).

Parameters to scan have to be specified in a .py file, stored inside the
"paramfiles/" folder. As an example, see the provided 'ntheta_scan.py' file.

Templates for the GS2 input file, slurm/pbs GS2 submitting script and slurm/pbs
postprocessing script should be saved in the directory from which the scan is run.
For a slurm scheduler, they should respectively be named 'myrun.in', 'sub_myrun.sh'
and 'pp_myrun.sh', where 'myrun' should be replaced with any user defined name.
For PBS schedulers, replace '.sh' with '.pbs'. As an example, see the templates
provided in the 'templates/' folder.


Examples
--------

The user specified parameters to scan in "ntheta_scan.py", and named his template files
respectively "myrun.in", 'sub_myrun.sh', 'pp_myrun.sh'.

1) python ~/path/to/code/scan_gs2.py --paramfile ntheta_scan --base_name myrun

    This will create the input, GS2 scheduling and postprocessing scheduling files.

2) python ~/path/to/code/scan_gs2.py --paramfile ntheta_scan --base_name myrun -S

    Same as 1), and also submits the GS2 runs to the queue.

3) python ~/path/to/code/scan_gs2.py --paramfile ntheta_scan --base_name myrun -P

    Same as 1), and also submits the postprocessing jobs to the queue.



For more help, please use the -h option.

